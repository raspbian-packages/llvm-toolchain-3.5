.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.
.TH LLVM-RANLIB "1" "October 2016" "llvm-ranlib 3.5" "User Commands"
.SH NAME
llvm-ranlib \- manual page for llvm-ranlib 3.5
.SH DESCRIPTION
OVERVIEW: LLVM Archiver (llvm\-ar)
.IP
This program archives bitcode files into single libraries
.PP
USAGE: llvm\-ranlib [options] [relpos] [count] <archive\-file> [members]...
.SS "OPTIONS:"
.HP
\fB\-aarch64\-neon\-syntax\fR                            \- Choose style of NEON code to emit from AArch64 backend:
.TP
=generic
\-   Emit generic NEON assembly
.TP
=apple
\-   Emit Apple\-style NEON assembly
.HP
\fB\-bounds\-checking\-single\-trap\fR                    \- Use one trap block per function
.HP
\fB\-cppfname=\fR<function name>                       \- Specify the name of the generated function
.HP
\fB\-cppfor=\fR<string>                                \- Specify the name of the thing to generate
.HP
\fB\-cppgen\fR                                         \- Choose what kind of output to generate
.TP
=program
\-   Generate a complete program
.TP
=module
\-   Generate a module definition
.TP
=contents
\-   Generate contents of a module
.TP
=function
\-   Generate a function definition
.TP
=functions
\-   Generate all function definitions
.TP
=inline
\-   Generate an inline function
.TP
=variable
\-   Generate a variable definition
.TP
=type
\-   Generate a type definition
.HP
\fB\-disable\-spill\-fusing\fR                           \- Disable fusing of spill code into instructions
.HP
\fB\-enable\-load\-pre\fR                                \-
.HP
\fB\-enable\-misched\fR                                 \- Enable the machine instruction scheduling pass.
.HP
\fB\-enable\-objc\-arc\-opts\fR                           \- enable/disable all ARC Optimizations
.HP
\fB\-enable\-tbaa\fR                                    \-
.HP
\fB\-exhaustive\-register\-search\fR                     \- Exhaustive Search for registers bypassing the depth and interference cutoffs of last chance recoloring
.HP
\fB\-fatal\-assembler\-warnings\fR                       \- Consider warnings as error
.HP
\fB\-help\fR                                           \- Display available options (\fB\-help\-hidden\fR for more)
.HP
\fB\-internalize\-public\-api\-file=\fR<filename>         \- A file containing list of symbol names to preserve
.HP
\fB\-internalize\-public\-api\-list=\fR<list>             \- A list of symbol names to preserve
.HP
\fB\-join\-liveintervals\fR                             \- Coalesce copies (default=true)
.HP
\fB\-limit\-float\-precision=\fR<uint>                   \- Generate low\-precision inline sequences for some float libcalls
.HP
\fB\-mc\-x86\-disable\-arith\-relaxation\fR                \- Disable relaxation of arithmetic instruction for X86
.HP
\fB\-mips16\-constant\-islands\fR                        \- MIPS: mips16 constant islands enable.
.HP
\fB\-mips16\-hard\-float\fR                              \- MIPS: mips16 hard float enable.
.HP
\fB\-mlsm\fR                                           \- Enable motion of merged load and store
.HP
\fB\-mno\-ldc1\-sdc1\fR                                  \- Expand double precision loads and stores to their single precision counterparts
.HP
\fB\-no\-discriminators\fR                              \- Disable generation of discriminator information.
.HP
\fB\-nvptx\-sched4reg\fR                                \- NVPTX Specific: schedule for register pressue
.HP
\fB\-print\-after\-all\fR                                \- Print IR after each pass
.HP
\fB\-print\-before\-all\fR                               \- Print IR before each pass
.HP
\fB\-print\-machineinstrs=\fR<pass\-name>                \- Print machine instrs
.HP
\fB\-regalloc\fR                                       \- Register allocator to use
.TP
=default
\-   pick register allocator based on \fB\-O\fR option
.TP
=basic
\-   basic register allocator
.TP
=fast
\-   fast register allocator
.TP
=greedy
\-   greedy register allocator
.TP
=pbqp
\-   PBQP register allocator
.HP
\fB\-rng\-seed=\fR<seed>                                \- Seed for the random number generator
.HP
\fB\-sample\-profile\-max\-propagate\-iterations=\fR<uint> \- Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
.HP
\fB\-spiller\fR                                        \- Spiller to use: (default: standard)
.TP
=trivial
\-   trivial spiller
.TP
=inline
\-   inline spiller
.HP
\fB\-stackmap\-version=\fR<int>                         \- Specify the stackmap encoding version (default = 1)
.HP
\fB\-stats\fR                                          \- Enable statistics output from program (available with Asserts)
.HP
\fB\-time\-passes\fR                                    \- Time each pass, printing elapsed time for each on exit
.HP
\fB\-verify\-debug\-info\fR                              \-
.HP
\fB\-verify\-dom\-info\fR                                \- Verify dominator info (time consuming)
.HP
\fB\-verify\-loop\-info\fR                               \- Verify loop info (time consuming)
.HP
\fB\-verify\-regalloc\fR                                \- Verify during register allocation
.HP
\fB\-verify\-region\-info\fR                             \- Verify region info (time consuming)
.HP
\fB\-verify\-scev\fR                                    \- Verify ScalarEvolution's backedge taken counts (slow)
.HP
\fB\-version\fR                                        \- Display the version of this program
.HP
\fB\-x86\-asm\-syntax\fR                                 \- Choose style of code to emit from X86 backend:
.TP
=att
\-   Emit AT&T\-style assembly
.TP
=intel
\-   Emit Intel\-style assembly
.SS "OPERATIONS:"
.TP
d[NsS]
\- delete file(s) from the archive
.TP
m[abiSs]
\- move file(s) in the archive
.TP
p[kN]
\- print file(s) found in the archive
.TP
q[ufsS]
\- quick append file(s) to the archive
.TP
r[abfiuRsS]
\- replace or insert file(s) into the archive
.TP
t
\- display contents of archive
.TP
x[No]
\- extract file(s) from the archive
.SS "MODIFIERS (operation specific):"
.IP
[a] \- put file(s) after [relpos]
[b] \- put file(s) before [relpos] (same as [i])
[i] \- put file(s) before [relpos] (same as [b])
[N] \- use instance [count] of name
[o] \- preserve original dates
[s] \- create an archive index (cf. ranlib)
[S] \- do not build a symbol table
[u] \- update only files newer than archive contents
.SS "MODIFIERS (generic):"
.IP
[c] \- do not warn if the library had to be created
[v] \- be verbose about actions taken
.SH "SEE ALSO"
The full documentation for
.B llvm-ranlib
is maintained as a Texinfo manual.  If the
.B info
and
.B llvm-ranlib
programs are properly installed at your site, the command
.IP
.B info llvm-ranlib
.PP
should give you access to the complete manual.
